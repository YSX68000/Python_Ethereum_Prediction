# -*- coding: utf-8 -*-
"""prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14VYoOq_ywNWt7qiHC14WMKF4pYtLiaNG
"""

pip install yfinance

import yfinance as yhf

import statsmodels.api as sm

dlf = yhf.download('ETH-EUR')

dlf

import numpy as np, pandas as pd, matplotlib.pyplot as plt
import math
from statsmodels.tsa.arima_model import ARIMA
from sklearn.metrics import mean_squared_error, mean_absolute_error

plt.plot(dlf.index, dlf['Adj Close'])
plt.show()

#Training section split

to_row = int(len(dlf)*0.9)

training_data = list(dlf[0:to_row]['Adj Close'])
testing_data = list(dlf[to_row:]['Adj Close'])
testing_data

plt.figure(figsize=(10,6))
plt.grid(True)
plt.xlabel('Dates')
plt.ylabel('Closing Prices')
plt.plot(dlf[0:to_row]['Adj Close'],'green',label='Train data')
plt.plot(dlf[to_row:]['Adj Close'],'blue',label='Test data')

model_predictions = []
n_test_obser = len(testing_data)

for i in range(n_test_obser):
  model = ARIMA(training_data, order=(4,1,0))
  model_fit = model.fit()
  output = model_fit.forecast()
  yhat = list(output[0])[0]
  model_predictions.append(yhat)
  actual_test_value = testing_data[i]
  training_data.append(actual_test_value)
  break